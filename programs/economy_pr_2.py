#!/usr/bin/env python3
#coding: utf-8

def ОЗперв(ОЗизгот:float, О3транс:float, ОЗмонтаж):
    ''' Возвращает первоначальную стоимость
        ОЗизгот - Стоимость покупки
        ОЗтранс - Транспортные затраты
        ОЗмонтаж - Затраты на монтаж и обслуживание
    '''
    return ОЗизгот + ОЗтранс + ОЗмонтаж

def ОЗвосст(Црынк, колОЗ):
    return Црынк * колОЗ

def ОЗбал(ОЗперв, лет, аморт):
    return ОЗперв - аморт * лет

def table_print(*a):
    ''' Выводит на экран кортеж в виде таблицы
    '''
    print(*a, sep=' ')

def Апрямол(перв_стоим:float, ликв_стоим:float, лет:int):
    ''' Строит таблицу амортизации прямолинейным методом
    '''
    Агод = (перв_стоим - ликв_стоим) / лет

    print("Агод:", Агод)

    table_print("Период", "Перв", "Сум", "Накопл", "Остаточ")
    накоп = 0
    for i in range(лет + 1):
        table_print(i, перв_стоим, Агод if i else 0, накоп, перв_стоим - накоп)
        накоп += Агод

def Аком(перв_стоим:float, ликв_стоим:float, лет:int):
    ''' Строит таблицу амортизации коммулятивным методом
    '''
    a = 0

    for i in range(1, лет + 1):
        a += i

    k = [x / a for x in range(лет, 0, -1)]

    print("Коэффициенты:", k)

    table_print("Период", "Перв", "Сум", "Накопл", "Остаточ")

    table_print(0, перв_стоим, 0, 0, перв_стоим)
    
    накоп = 0

    for i in range(лет):
        tmp = (перв_стоим - ликв_стоим) * k[i]
        накоп += tmp
        table_print(i + 1, перв_стоим, tmp, накоп, перв_стоим - накоп)

def Апроизв(перв_стоим:float, ликв_стоим:float, лет:int, произв:tuple):
    ''' Строит таблицу амортизации производственным методом
    '''
    произв_сум = 0

    for i in произв:
        произв_сум += i

    k = (перв_стоим - ликв_стоим) / произв_сум

    table_print("Период", "Перв", "Сум", "Накопл", "Остаточ")

    table_print(0, перв_стоим, 0, 0, перв_стоим)
    
    накоп = 0

    for i in range(лет):
        tmp = произв[i] * k
        накоп += tmp
        table_print(i + 1, перв_стоим, tmp, накоп, перв_стоим - накоп)

def ОЗdef(начальн_стоим:float, ввод:tuple, вывод:tuple):
    ''' Рассчитывает среднегодовую стоимость основных средств
        ввод: (месяц:int, стоимость:float) - Вводимые средства
        вывод: (месяц:int, стоимость: float) - Выводимые средства
    '''

    tmp = начальн_стоим

    for (месяц, стоимость) in ввод:
        tmp += стоимость * (12 - месяц) / 12

    for (месяц, стоимость) in вывод:
        tmp -= стоимость * (12 - месяц) / 12

    return tmp
